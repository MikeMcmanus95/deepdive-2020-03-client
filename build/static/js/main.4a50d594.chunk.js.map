{"version":3,"sources":["components/DeleteButton.js","components/questions/AllQuestions.js","components/questions/CreateQuestion.js","hooks/useInput.js","components/options/CreateOption.js","components/options/AllOptions.js","components/questions/SingleQuestion.js","App.js","serviceWorker.js","index.js"],"names":["DeleteButton","itemId","itemType","history","deleteItem","a","axios","delete","push","className","onClick","AllQuestions","props","React","useState","questions","setQuestions","getQuestions","get","data","useEffect","console","log","map","question","key","id","body","to","instructions","CreateQuestion","setBody","setInstructions","handleSubmit","evt","preventDefault","post","type","value","onChange","target","useInput","initialValue","setValue","reset","bind","event","CreateOption","bindBody","resetBody","imageUrl","bindImageUrl","resetImageUrl","AllOptions","options","setOptions","getOptions","option","imgUrl","SingleQuestion","setQuestion","allOptions","setAllOptions","optionsToAdd","setOptionsToAdd","getQuestion","match","params","getAllOptions","forEach","dataToSend","questionId","optionId","isAnswer","length","labelKey","multiple","placeholder","App","path","About","exact","component","Home","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oSAmBeA,EAhBM,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAEjCC,EAAU,uCAAG,sBAAAC,EAAA,sEACXC,IAAMC,OAAN,eAAqBL,EAArB,YAAiCD,IADtB,OAEjBE,EAAQK,KAAR,WAAiBN,IAFA,2CAAH,qDAKhB,OACE,yBAAKO,UAAU,iBACbC,QAASN,GADX,MCqCWO,EA3CM,SAACC,GAAU,MAEIC,IAAMC,SAAS,IAFnB,mBAEvBC,EAFuB,KAEZC,EAFY,KAIxBC,EAAY,uCAAG,8BAAAZ,EAAA,sEACIC,IAAMY,IAAI,kBADd,gBACXC,EADW,EACXA,KACRH,EAAaG,GAFM,2CAAH,qDAWlB,OANAN,IAAMO,WAAU,WACdH,MACC,IAEHI,QAAQC,IAAI,wBAAyBV,GAGnC,yBAAKH,UAAU,YACb,yBAAKA,UAAU,oBACb,0CAEF,yBAAKA,UAAU,kBACZM,EAAUQ,KAAI,SAAAC,GAAQ,OACrB,yBAAKf,UAAU,iBAAiBgB,IAAKD,EAASE,IAC5C,yBAAKjB,UAAU,uBACZe,EAASG,KADZ,IACkB,kBAAC,IAAD,CAAMC,GAAE,qBAAgBJ,EAASE,KAAOF,EAASE,KAEnE,yBAAKjB,UAAU,+BACZe,EAASK,cAEZ,kBAAC,EAAD,CACE5B,OAAQuB,EAASE,GACjBxB,SAAS,YACTC,QAASS,EAAMT,iBCgBd2B,EAlDQ,WAAO,IAAD,EACHhB,mBAAS,IADN,mBACpBa,EADoB,KACdI,EADc,OAEajB,mBAAS,IAFtB,mBAEpBe,EAFoB,KAENG,EAFM,KAIrBC,EAAY,uCAAG,WAAOC,GAAP,SAAA7B,EAAA,6DACnB6B,EAAIC,iBACJd,QAAQC,IAAIK,EAAME,GAFC,SAGbvB,IAAM8B,KAAK,iBAAkB,CACjCT,OACAE,iBALiB,OAOnBE,EAAQ,IACRC,EAAgB,IARG,2CAAH,sDAWlB,OACE,yBAAKvB,UAAU,mBACb,yBAAKA,UAAU,2BACb,sDAEF,0BAAMA,UAAU,yBACd,2DAGA,2BACEA,UAAU,8BACV4B,KAAK,OACLC,MAAOX,EACPY,SAAU,SAAAL,GAAG,OAAIH,EAAQG,EAAIM,OAAOF,UAEtC,wEAGA,2BACE7B,UAAU,sCACV4B,KAAK,OACLC,MAAOT,EACPU,SAAU,SAAAL,GAAG,OAAIF,EAAgBE,EAAIM,OAAOF,UAE9C,2BACE7B,UAAU,iBACV4B,KAAK,SACLC,MAAM,kBACN5B,QAASuB,OC5CNQ,EAAW,SAAAC,GAAiB,IAAD,EACZ5B,mBAAS4B,GADG,mBAC/BJ,EAD+B,KACxBK,EADwB,KAGtC,MAAO,CACLL,QACAK,WACAC,MAAO,kBAAMD,EAAS,KACtBE,KAAM,CACJP,QACAC,SAAU,SAAAO,GACRH,EAASG,EAAMN,OAAOF,WC4CfS,EApDM,WAAM,MAG8BN,EAAS,IAAlDd,EAHW,EAGjBW,MAAiBU,EAHA,EAGLH,KAAqBI,EAHhB,EAGUL,MAHV,EAI0CH,EAAS,IAA9DS,EAJW,EAIjBZ,MAAqBa,EAJJ,EAIDN,KAAyBO,EAJxB,EAIkBR,MAIrCX,EAAY,uCAAG,WAAOC,GAAP,SAAA7B,EAAA,sDACnB6B,EAAIC,iBACJd,QAAQC,IAAIK,EAAMuB,GAKlBD,IACAG,IARmB,2CAAH,sDAWlB,OACE,yBAAK3C,UAAU,mBACb,yBAAKA,UAAU,2BACb,oDAEF,0BAAMA,UAAU,yBACd,0DAGA,yCACEA,UAAU,8BACV4B,KAAK,QACDW,IAEN,6DAGA,yCACEvC,UAAU,sCACV4B,KAAK,QACDc,IAEN,2BACE1C,UAAU,gCACV4B,KAAK,SACLC,MAAM,kBACN5B,QAASuB,OCHJoB,EAzCI,SAACzC,GAAU,MAEEC,IAAMC,SAAS,IAFjB,mBAErBwC,EAFqB,KAEZC,EAFY,KAItBC,EAAU,uCAAG,8BAAAnD,EAAA,sEACMC,IAAMY,IAAI,gBADhB,gBACTC,EADS,EACTA,KACRoC,EAAWpC,GAFM,2CAAH,qDAShB,OAJAN,IAAMO,WAAU,WACdoC,MACC,IAGD,yBAAK/C,UAAU,UACb,yBAAKA,UAAU,kBACb,wCAEF,6BACG6C,EAAQ/B,KAAI,SAAAkC,GAAM,OACjB,yBAAKhD,UAAU,eAAegB,IAAKgC,EAAO/B,IACxC,yBAAKjB,UAAU,qBACZgD,EAAO9B,KADV,IACiB8B,EAAO/B,GACtB,kBAAC,EAAD,CACEzB,OAAQwD,EAAO/B,GACfxB,SAAS,UACTC,QAASS,EAAMT,WAGnB,yBAAKM,UAAU,oBACZgD,EAAOC,e,QCwDPC,EArFQ,SAAC/C,GAAW,IAAD,MACAC,IAAMC,SAAS,IADf,mBACzBU,EADyB,KACfoC,EADe,OAEI/C,IAAMC,SAAS,IAFnB,mBAEzB+C,EAFyB,KAEbC,EAFa,OAGQjD,IAAMC,SAAS,IAHvB,mBAGzBiD,EAHyB,KAGXC,EAHW,KAK1BC,EAAW,uCAAG,gCAAA5D,EAAA,6DACVqB,EAAOd,EAAMsD,MAAMC,OAAnBzC,GADU,SAEKpB,IAAMY,IAAN,yBAA4BQ,IAFjC,gBAEVP,EAFU,EAEVA,KACRyC,EAAYzC,GAHM,2CAAH,qDAMXiD,EAAa,uCAAG,8BAAA/D,EAAA,sEACGC,IAAMY,IAAI,gBADb,gBACZC,EADY,EACZA,KACR2C,EAAc3C,GAFM,2CAAH,qDAKnBE,QAAQC,IAAI,iBAAkBE,GAG9B,IAAMS,EAAY,uCAAG,sBAAA5B,EAAA,sDACnBgB,QAAQC,IAAI,kBAAmByC,GAC/BA,EAAaM,QAAb,uCAAqB,WAAOZ,GAAP,eAAApD,EAAA,6DACbiE,EAAa,CACjBC,WAAY/C,EAASE,GACrB8C,SAAUf,EAAO/B,GACjB+C,UAAU,GAJO,SAMbnE,IAAM8B,KAAK,uBAAwBkC,GANtB,OAOnBL,IAPmB,2CAArB,uDAFmB,2CAAH,qDAkBlB,OALApD,IAAMO,WAAU,WACd6C,IACAG,MACC,IAGD,yBAAK3D,UAAU,mBACb,oDAEA,yBAAKA,UAAU,iBAAiBgB,IAAKD,EAASE,IAC5C,yBAAKjB,UAAU,uBACZe,EAASG,KADZ,IACmBH,EAASE,IAE5B,yBAAKjB,UAAU,+BACZe,EAASK,cAEZ,kBAAC,EAAD,CACE5B,OAAQuB,EAASE,GACjBxB,SAAS,YACTC,QAASS,EAAMT,WAGnB,yBAAKM,UAAU,qBACb,yCACC,OAACe,QAAD,IAACA,GAAD,UAACA,EAAU8B,eAAX,aAAC,EAAmBoB,QAA8B,KAArB,mBAFhC,OAGGlD,QAHH,IAGGA,GAHH,UAGGA,EAAU8B,eAHb,aAGG,EAAmB/B,KAAI,SAACkC,GAAD,OACtB,yBAAKhD,UAAU,2BACZgD,EAAO9B,KADV,IACiB8B,EAAO/B,QAI5B,yBAAKjB,UAAU,yBACb,6DACA,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CACEiB,GAAG,mBACHiD,SAAS,OACTC,UAAU,EACVrC,SAAUyB,EACVV,QAASO,EACTgB,YAAY,sBAKhB,yBAAKpE,UAAU,iBAAiBC,QAASuB,GAAzC,a,MCrEO,SAAS6C,IACtB,OACE,kBAAC,IAAD,KACE,6BACE,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMlD,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,cAAT,cAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,qBAAT,oBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,cAON,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmD,KAAK,UACV,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,mBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOE,OAAK,EAACF,KAAK,qBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CACEA,KAAK,iBACLG,UAAWvB,IAEb,kBAAC,IAAD,CACEoB,KAAK,aACLG,UAAWvE,IAEb,kBAAC,IAAD,CAAOoE,KAAK,KACV,kBAACI,EAAD,UAQZ,SAASA,IACP,OAAO,oCAGT,SAASH,IACP,OAAO,oCC/DWI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCZNsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACZ,EAAD,OAEFa,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/E,QAAQ+E,MAAMA,EAAMC,c","file":"static/js/main.4a50d594.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst DeleteButton = ({itemId, itemType, history}) => {\n  // console.log(itemId, itemType, history)\n  const deleteItem = async () => {\n    await axios.delete(`/api/${itemType}/${itemId}`);\n    history.push(`/${itemType}`)\n  }\n\n  return (\n    <div className=\"button--delete\"\n      onClick={deleteItem}\n    >\n      X\n    </div>\n  )\n}\n\nexport default DeleteButton;\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport DeleteButton from '../DeleteButton';\n\nconst AllQuestions = (props) => {\n  // state in our functional component, with React hooks\n  const [questions, setQuestions] = React.useState([]);\n\n  const getQuestions = async () => {\n    const { data } = await axios.get(\"/api/questions\");\n    setQuestions(data);\n  }\n\n  React.useEffect(() => {\n    getQuestions();\n  }, []);\n  // console.log('questions >>>', questions);\n  console.log('props in allquestions', props)\n\n  return (\n    <div className=\"question\">\n      <div className=\"question__header\">\n        <h2>Questions</h2>\n      </div>\n      <div className=\"question__list\">\n        {questions.map(question =>\n          <div className=\"question__item\" key={question.id}>\n            <div className=\"question__item-body\">\n              {question.body} <Link to={`/questions/${question.id}`}>{question.id}</Link>\n            </div>\n            <div className=\"question__item-instructions\">\n              {question.instructions}\n            </div>\n            <DeleteButton\n              itemId={question.id}\n              itemType=\"questions\"\n              history={props.history}\n            />\n          </div>)}\n      </div>\n    </div>\n  )\n}\n\n// <a href={`/${question.id}`}>{question.id}</a>\n// // the difference between using a href and react router link: a href will cause the page to hard refresh/reload\n\nexport default AllQuestions;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst CreateQuestion = () => {\n  const [body, setBody] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    console.log(body, instructions);\n    await axios.post('/api/questions', {\n      body,\n      instructions\n    });\n    setBody(\"\");\n    setInstructions(\"\");\n  }\n\n  return (\n    <div className=\"question-create\">\n      <div className=\"question-create__header\">\n        <h2>Create A New Question</h2>\n      </div>\n      <form className=\"question-create__form\">\n        <label>\n          Please enter a question:\n        </label>\n        <input\n          className=\"question-create__input-body\"\n          type=\"text\"\n          value={body}\n          onChange={evt => setBody(evt.target.value)}\n        />\n        <label>\n          Please enter additional instructions:\n        </label>\n        <input\n          className=\"question-create__input-instructions\"\n          type=\"text\"\n          value={instructions}\n          onChange={evt => setInstructions(evt.target.value)}\n        />\n        <input\n          className=\"button--submit\"\n          type=\"submit\"\n          value=\"Add My Question\"\n          onClick={handleSubmit}\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default CreateQuestion;\n","import { useState } from \"react\";\n\nexport const useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n};\n","import React, { useState } from 'react';\nimport { useInput } from '../../hooks/useInput';\nimport axios from 'axios';\n\nconst CreateOption = () => {\n  // const [body, setBody] = useState(\"\");\n  // const [instructions, setInstructions] = useState(\"\");\n  const { value:body, bind:bindBody, reset:resetBody } = useInput('');\n  const { value:imageUrl, bind:bindImageUrl, reset:resetImageUrl } = useInput('');\n\n\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    console.log(body, imageUrl);\n    // await axios.post('/api/questions', {\n    //   body,\n    //   instructions\n    // });\n    resetBody();\n    resetImageUrl();\n  }\n\n  return (\n    <div className=\"question-create\">\n      <div className=\"question-create__header\">\n        <h2>Create A New Option</h2>\n      </div>\n      <form className=\"question-create__form\">\n        <label>\n          Please enter an option:\n        </label>\n        <input\n          className=\"question-create__input-body\"\n          type=\"text\"\n          {...bindBody}\n        />\n        <label>\n          Please enter an image URL:\n        </label>\n        <input\n          className=\"question-create__input-instructions\"\n          type=\"text\"\n          {...bindImageUrl}\n        />\n        <input\n          className=\"question-create__input-submit\"\n          type=\"submit\"\n          value=\"Add My Question\"\n          onClick={handleSubmit}\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default CreateOption;\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport DeleteButton from '../DeleteButton';\n\nconst AllOptions = (props) => {\n  // state in our functional component, with React hooks\n  const [options, setOptions] = React.useState([]);\n\n  const getOptions = async () => {\n    const { data } = await axios.get(\"/api/options\");\n    setOptions(data);\n  }\n\n  React.useEffect(() => {\n    getOptions();\n  }, []);\n\n  return (\n    <div className=\"option\">\n      <div className=\"option__header\">\n        <h2>Options</h2>\n      </div>\n      <div>\n        {options.map(option =>\n          <div className=\"option__item\" key={option.id}>\n            <div className=\"option__item-body\">\n              {option.body} {option.id}\n              <DeleteButton\n                itemId={option.id}\n                itemType=\"options\"\n                history={props.history}\n              />\n            </div>\n            <div className=\"option__item-img\">\n              {option.imgUrl}\n            </div>\n          </div>)}\n      </div>\n    </div>\n  )\n}\n\n// <a href={`/${question.id}`}>{question.id}</a>\n// // the difference between using a href and react router link: a href will cause the page to hard refresh/reload\n\nexport default AllOptions;\n","import React from 'react';\nimport axios from 'axios';\nimport DeleteButton from '../DeleteButton';\nimport { FormGroup } from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nconst SingleQuestion = (props) => {\n  const [question, setQuestion] = React.useState({});\n  const [allOptions, setAllOptions] = React.useState({});\n  const [optionsToAdd, setOptionsToAdd] = React.useState([]);\n\n  const getQuestion = async () => {\n    const { id } = props.match.params;\n    const { data } = await axios.get(`/api/questions/${id}`);\n    setQuestion(data);\n  };\n\n  const getAllOptions = async () => {\n    const { data } = await axios.get('/api/options');\n    setAllOptions(data);\n  };\n  // console.log('props?', props);\n  console.log('question state', question);\n  // console.log('all options >>>', allOptions)\n\n  const handleSubmit = async () => {\n    console.log('options to add?', optionsToAdd);\n    optionsToAdd.forEach(async (option) => {\n      const dataToSend = {\n        questionId: question.id,\n        optionId: option.id,\n        isAnswer: false,\n      };\n      await axios.post('/api/questionOptions', dataToSend);\n      getQuestion();\n    });\n  };\n\n  React.useEffect(() => {\n    getQuestion();\n    getAllOptions();\n  }, []);\n\n  return (\n    <div className=\"question-single\">\n      <h2>Single Question Page</h2>\n\n      <div className=\"question__item\" key={question.id}>\n        <div className=\"question__item-body\">\n          {question.body} {question.id}\n        </div>\n        <div className=\"question__item-instructions\">\n          {question.instructions}\n        </div>\n        <DeleteButton\n          itemId={question.id}\n          itemType=\"questions\"\n          history={props.history}\n        />\n      </div>\n      <div className=\"question__options\">\n        <h3>Options:</h3>\n        {!question?.options?.length ? 'None associated.' : null}\n        {question?.options?.map((option) => (\n          <div className=\"question__single-option\">\n            {option.body} {option.id}\n          </div>\n        ))}\n      </div>\n      <div className=\"question__add-options\">\n        <h3>Add options to this question:</h3>\n        <div className=\"question__typeahead\">\n          <Typeahead\n            id=\"question-options\"\n            labelKey=\"body\"\n            multiple={true}\n            onChange={setOptionsToAdd}\n            options={allOptions}\n            placeholder=\"Choose an option\"\n          />\n          {/* <FormGroup>\n          </FormGroup> */}\n        </div>\n        <div className=\"button--submit\" onClick={handleSubmit}>\n          Submit\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleQuestion;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport AllQuestions from \"./components/questions/AllQuestions\";\nimport CreateQuestion from \"./components/questions/CreateQuestion\";\nimport CreateOption from \"./components/options/CreateOption\";\nimport AllOptions from \"./components/options/AllOptions\";\nimport SingleQuestion from \"./components/questions/SingleQuestion\";\nimport './main.scss';\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/questions\">Questions</Link>\n            </li>\n            <li>\n              <Link to=\"/questions/create\">Create Question</Link>\n            </li>\n            <li>\n              <Link to=\"/options\">Options</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/options/create\">\n            <CreateOption />\n          </Route>\n          <Route path=\"/options\">\n            <AllOptions />\n          </Route>\n          <Route exact path=\"/questions/create\">\n            <CreateQuestion />\n          </Route>\n          <Route\n            path=\"/questions/:id\"\n            component={SingleQuestion}\n          />\n          <Route\n            path=\"/questions\"\n            component={AllQuestions}\n          />\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>Quiz</h2>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}